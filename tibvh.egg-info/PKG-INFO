Metadata-Version: 2.4
Name: tibvh
Version: 0.1.0
Summary: A high-performance Taichi-based Linear BVH implementation for 3D geometry processing
Author-email: TIBVH Contributors <contributors@example.com>
Maintainer-email: TIBVH Contributors <contributors@example.com>
License: MIT License
        
        Copyright (c) 2025 Yufei Jia
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: homepage, https://github.com/yourorg/tibvh
Project-URL: documentation, https://tibvh.readthedocs.io
Project-URL: repository, https://github.com/yourorg/tibvh
Project-URL: Bug Tracker, https://github.com/yourorg/tibvh/issues
Keywords: bvh,taichi,geometry,3d,ray-tracing,spatial-data-structures,collision-detection,computer-graphics
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Multimedia :: Graphics :: 3D Modeling
Classifier: Topic :: Multimedia :: Graphics :: 3D Rendering
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: taichi>=1.6.0
Requires-Dist: numpy>=1.19.0
Requires-Dist: torch>=1.10.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov>=2.0; extra == "dev"
Requires-Dist: black>=22.0; extra == "dev"
Requires-Dist: isort>=5.0; extra == "dev"
Requires-Dist: flake8>=4.0; extra == "dev"
Requires-Dist: mypy>=0.910; extra == "dev"
Requires-Dist: pre-commit>=2.15.0; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=4.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=1.0; extra == "docs"
Requires-Dist: myst-parser>=0.17.0; extra == "docs"
Provides-Extra: examples
Requires-Dist: matplotlib>=3.0; extra == "examples"
Requires-Dist: jupyter>=1.0; extra == "examples"
Dynamic: license-file

# TIBVH - Taichi-based Linear BVH

A high-performance Python package for 3D spatial data structures and geometry processing using Taichi for GPU acceleration.

## Installation

### Requirements

- Python 3.8+
- Taichi 1.6.0+
- NumPy 1.19.0+
- PyTorch 1.10.0+

### Install from Source

```bash
git clone https://github.com/TATP-233/tibvh.git
cd tibvh
pip install -e .
```

### Supported Geometry Types

- **PLANE (0)**: Infinite planes with optional bounds
- **SPHERE (2)**: Spheres defined by center and radius
- **CAPSULE (3)**: Capsules (cylinders with hemispherical caps)
- **ELLIPSOID (4)**: Ellipsoids with three different radii
- **CYLINDER (5)**: Finite cylinders with caps
- **BOX (6)**: Oriented bounding boxes
- **TRIANGLES**: Individual triangles for mesh processing

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.


## Acknowledgments

- Based on the Linear BVH construction algorithm by Tero Karras (NVIDIA Research)
- Powered by the [Taichi](https://github.com/taichi-dev/taichi) programming language
- Inspired by modern GPU-accelerated spatial data structures

## References

- Karras, T. (2012). "Maximizing Parallelism in the Construction of BVHs, Octrees, and k-d Trees". NVIDIA Research.
- Lauterbach, C. et al. (2009). "Fast BVH Construction on GPUs". Computer Graphics Forum.
